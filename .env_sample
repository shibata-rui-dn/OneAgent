# =====================================================
# OneAgent サーバー環境設定ファイル
# =====================================================
# 最終更新: 2025-05-31
# 
# このファイルには機密情報が含まれています。
# 本番環境では適切なセキュリティ対策を実施してください。
# =====================================================

# -----------------------------------------------------
# サーバー基本設定
# -----------------------------------------------------
# サーバーの起動ポートとホスト
PORT=3000
HOST=localhost

# Node.js 実行環境（development/production/test）
NODE_ENV=development

# フロントエンドアプリケーションのURL
FRONTEND_URL=http://localhost:5173
DEMO_YOUR_DRIVE_URL=http://localhost:3551

# -----------------------------------------------------
# AI エージェント設定
# -----------------------------------------------------
# 使用するAIプロバイダー: openai / azureopenai / localllm
AI_PROVIDER=openai

# 使用するAIモデル名
AI_MODEL=gpt-4o-mini

# AI応答の創造性レベル（0.0-2.0）
AI_TEMPERATURE=0.5

# ストリーミングレスポンスの有効化
AI_STREAMING=true

# 最大トークン数制限
AI_MAX_TOKENS=8024

# AI APIタイムアウト時間（ミリ秒）
AI_TIMEOUT=60000

# -----------------------------------------------------
# OpenAI API 設定
# -----------------------------------------------------
# OpenAI APIキー（sk-で始まる文字列）
OPENAI_API_KEY=your-openai-api-key

# -----------------------------------------------------
# Azure OpenAI 設定（azureopenaiプロバイダー使用時）
# -----------------------------------------------------
# Azure OpenAI エンドポイントURL
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com

# Azure OpenAI APIバージョン
AZURE_OPENAI_API_VERSION=2024-02-15-preview

# -----------------------------------------------------
# ローカルLLM 設定（localllmプロバイダー使用時）
# -----------------------------------------------------
# ローカルLLMサーバーのURL（VLLM等）
LOCAL_LLM_URL=http://localhost:8000

# ローカルLLMのモデル名
LOCAL_LLM_MODEL=Qwen/Qwen3-4B

# -----------------------------------------------------
# OAuth 2.0 認証設定
# -----------------------------------------------------
# JWT署名用シークレットキー（64文字の16進数推奨）
JWT_SECRET=038fcdb0cdc191a0df4e1645801fadc2bd8f410d63f48763986acad1249881e6

# JWTアクセストークンの有効期限
JWT_EXPIRY=15m

# リフレッシュトークンの有効期限
REFRESH_TOKEN_EXPIRY=7d

# 認可コードの有効期限（秒）
AUTH_CODE_EXPIRY=600

# OAuthクライアントID
OAUTH_CLIENT_ID=oneagent-default-client

# OAuthクライアントシークレット（64文字の16進数推奨）
OAUTH_CLIENT_SECRET=e43bf037de42a654b5db4848d3e0dfb610b5f363f5534234a6ff35a6e4eebbdf

# OAuth認可後のリダイレクト先URL（カンマ区切り）
OAUTH_REDIRECT_URIS=http://localhost:5173/oauth/callback,http://localhost:3000/oauth/callback,http://localhost:3551/oauth/callback

# OAuth対応スコープ（カンマ区切り）
OAUTH_SCOPES=read,write,admin

# -----------------------------------------------------
# セッション管理設定
# -----------------------------------------------------
# セッション署名用シークレット（JWT_SECRETと異なる値推奨）
SESSION_SECRET=25b1250477a01f6a3d3e776439015e150ae75c04c5d0e10b1aabe14b7631c28c

# セッション有効期限（ミリ秒）24時間 = 86400000
SESSION_MAX_AGE=86400000

# HTTPSでのみセッションクッキーを送信（本番環境ではtrue推奨）
SESSION_SECURE=false

# XSSを防ぐためクライアントサイドJavaScriptからクッキーアクセス不可
SESSION_HTTP_ONLY=true

# CSRF攻撃を防ぐためのSameSite設定
SESSION_SAME_SITE=lax

# -----------------------------------------------------
# CORS（Cross-Origin Resource Sharing）設定
# -----------------------------------------------------
# 許可するオリジン（カンマ区切り）
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:3551

# 認証情報付きリクエストの許可
CORS_CREDENTIALS=true

# プリフライトリクエストのキャッシュ時間（秒）
CORS_MAX_AGE=86400

# -----------------------------------------------------
# セキュリティ設定
# -----------------------------------------------------
# レート制限の時間窓（ミリ秒）15分 = 900000
RATE_LIMIT_WINDOW=900000

# 時間窓内の最大リクエスト数
RATE_LIMIT_MAX=100

# HTTPS強制（本番環境ではtrue推奨）
FORCE_HTTPS=false

# HSTS（HTTP Strict Transport Security）の最大期間（秒）
HSTS_MAX_AGE=31536000

# CSP（Content Security Policy）の有効化
CSP_ENABLED=true

# -----------------------------------------------------
# ファイル管理設定
# -----------------------------------------------------
# ユーザーファイルの最大サイズ（バイト）10MB = 10485760
MAX_FILE_SIZE=10485760

# ユーザーあたりの最大ファイル数
MAX_FILES_PER_USER=1000

# フォルダの最大階層数
MAX_FOLDER_DEPTH=10

# 許可するファイル拡張子（カンマ区切り）
ALLOWED_FILE_EXTENSIONS=.txt,.md,.json,.xml,.csv,.yaml,.yml,.js,.ts,.html,.css,.py,.java,.cpp,.c,.sh,.bat,.sql,.log,.ini,.conf

# -----------------------------------------------------
# ツール管理設定
# -----------------------------------------------------
# 最大ツール数
MAX_TOOLS=100

# ツール自動リロード間隔（ミリ秒、0で無効）
TOOLS_RELOAD_INTERVAL=0

# 許可するツール拡張子（カンマ区切り）
ALLOWED_TOOL_EXTENSIONS=.js,.mjs

# 開発環境でのツール変更時自動リロード
TOOL_RELOAD_ON_CHANGE=true

# -----------------------------------------------------
# ログ設定
# -----------------------------------------------------
# ログレベル: error / warn / info / debug
LOG_LEVEL=info

# ログファイルパス
LOG_FILE_PATH=./logs/oneagent.log

# ログファイルの最大サイズ（バイト）10MB = 10485760
LOG_MAX_FILE_SIZE=10485760

# 保持するログファイル数
LOG_MAX_FILES=5

# セキュリティログの有効化（パフォーマンス重視のため無効推奨）
SECURITY_LOG_ENABLED=false

# セキュリティログ出力パス（空で無効）
SECURITY_LOG_PATH=

# セキュリティログのコンソール出力
SECURITY_LOG_CONSOLE=true

# セキュリティログ処理タイムアウト（ミリ秒）
SECURITY_LOG_TIMEOUT=500

# 詳細ログ出力（デバッグ時のみ）
VERBOSE_LOGGING=false

# -----------------------------------------------------
# データベース設定
# -----------------------------------------------------
# データベースタイプ: json / sqlite / postgres
DB_TYPE=json

# データベース接続文字列（SQLite/PostgreSQL使用時）
# DATABASE_URL=

# データ保存ディレクトリ
# DATA_DIR=./data

# 自動バックアップの有効化
DB_BACKUP_ENABLED=true

# バックアップ間隔（ミリ秒）24時間 = 86400000
DB_BACKUP_INTERVAL=86400000

# -----------------------------------------------------
# 開発・デバッグ設定
# -----------------------------------------------------
# デバッグモードの有効化
DEBUG_ENABLED=true

# 起動時の環境変数表示
PRINT_ENV_ON_START=false

# -----------------------------------------------------
# OAuth データベースファイルパス
# -----------------------------------------------------
# OAuthユーザー情報ファイル
OAUTH_USERS_DB_PATH=./data/oauth_users.json

# OAuthトークン情報ファイル
OAUTH_TOKENS_DB_PATH=./data/oauth_tokens.json

# =====================================================
# 設定例・テンプレート
# =====================================================

# Azure OpenAI 使用例:
# AI_PROVIDER=azureopenai
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com
# OPENAI_API_KEY=your-azure-openai-key

# ローカルLLM 使用例:
# AI_PROVIDER=localllm
# LOCAL_LLM_URL=http://localhost:8000
# LOCAL_LLM_MODEL=Qwen/Qwen2.5-Coder-32B-Instruct

# 本番環境セキュリティ設定例:
# NODE_ENV=production
# FORCE_HTTPS=true
# SESSION_SECURE=true
# SECURITY_LOG_ENABLED=false
# DEBUG_ENABLED=false